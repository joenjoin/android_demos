1. git 取消一次提交 ,取消merge步骤与此相同
   1)git log 查看提交记录，找到要回退到的版本的commit_id
   2)git reset --hard <commit_id>
   3)git push origin HEAD --force
   
   其他:

    根据–soft –mixed –hard，会对working tree和index和HEAD进行重置:
    git reset –mixed：此为默认方式，不带任何参数的git reset，即时这种方式，它回退到某个版本，只保留源码，回退commit和index信息
    git reset –soft：回退到某个版本，只回退了commit的信息，不会恢复到index file一级。如果还要提交，直接commit即可
    git reset –hard：彻底回退到某个版本，本地的源码也会变为上一个版本的内容


    HEAD 最近一个提交
    HEAD^ 上一次
    <commit_id>  每次commit的SHA1值. 可以用git log 看到,也可以在页面上commit标签页里找到.

    2. git 取消 add 操作
     git reset HEAD <file-name>
     
    3 .git pull 文件冲突
    1).stash
		通常遇到这个问题，你可以直接commit你的修改；但我这次不想这样。
		看看git stash是如何做的。
		git stash
		git pull
		git stash pop
		接下来diff一下此文件看看自动合并的情况，并作出相应修改。
		git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。
		git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。
		git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。
		git stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。

	2).放弃本地修改，直接覆盖之
		git reset --hard
		git pull